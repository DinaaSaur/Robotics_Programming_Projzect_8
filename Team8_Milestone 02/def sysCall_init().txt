def sysCall_init():
    sim = require('sim')
    
    self.objectHandle = sim.getObject("../q1")
    self.target_position = 90 * (3.14/180)
    self.require_duration = 5 #seconds
    
    #sim.setJointPosition(objectHandle, target_position)

    # do some initialization here
    #
    # Instead of using globals, you can do e.g.:
    # self.myVariable = 21000000

def sysCall_actuation():
    # put your actuation code here
    curr_time = sim.getSimulationTime()
    if curr_time < self.require_duration:
        new_position = (curr_time/self.require_duration) * self.target_position
        sim.setJointTargetPosition(self.objectHandle, new_position)
    else:
        sim.setJointTargetPosition(self.objectHandle, self.target_position)
        
        
    pass

def sysCall_sensing():
    # put your sensing code here
    pass

def sysCall_cleanup():
    EE_handle = sim.getObject("/endEffector_respondable")
    base_handle = sim.getObject("../base_link_visual")
    EE_position = sim.getObjectPosition(EE_handle, base_handle)
    print(EE_position)
    # do some clean-up here
    pass

# See the user manual or the available code snippets for additional callback functions and details
